{"version":3,"sources":["card.js","index.js"],"names":["CheckCardNumber","cardNumber","document","querySelector","resultContainer","cardTypes","name","numberLength","startNum","isNumber","test","value","isLetter","length","alert","assignCard","type","map","el","substring","includes","checkNumber","multiNums","normalNums","multiSum","normSum","split","reverse","index","push","Number","textContent","e","preventDefault","validator","form","checkCardNumber","addEventListener","showInfo"],"mappings":"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","file":"src.25e44971.js","sourceRoot":"..\\src","sourcesContent":["class CheckCardNumber {\r\n    constructor() {\r\n        this.cardNumber = document.querySelector('[name=\"card-number\"]');\r\n        this.resultContainer = document.querySelector('h2');\r\n        this.cardTypes = [\r\n            {\r\n                name: 'Mastercard',\r\n                numberLength: [16],\r\n                startNum: /[22,5][1-5]/\r\n            }, {\r\n                name: 'Visa',\r\n                numberLength: [16, 13],\r\n                startNum: /4[0-9]/\r\n            }, {\r\n                name: 'American Express',\r\n                numberLength: [15],\r\n                startNum: /3[4,7]/\r\n            }, {\r\n                name: 'Discover',\r\n                numberLength: [16],\r\n                startNum: /60/\r\n            }, {\r\n                name: 'JCB',\r\n                numberLength: [16],\r\n                startNum: /35/\r\n            }, {\r\n                name: 'Diners Club',\r\n                numberLength: [14],\r\n                startNum: /30/\r\n            }\r\n        ]\r\n    }\r\n    validator() {\r\n\r\n        const isNumber = (/^\\d+$/).test(this.cardNumber.value);\r\n        const isLetter = (/[a-z]/gi).test(this.cardNumber.value);\r\n        if (isLetter) {\r\n            alert('Niepoprawny numer')\r\n        } else if (this.cardNumber.value.length < 13) {\r\n            return alert('Wprowadzony numer jest za krótki')\r\n        } else if (this.cardNumber.value.length > 16) {\r\n            return alert('Wprowadzony numer jest za długi')\r\n        } else if (isNumber) {\r\n            return this.assignCard();\r\n        } else {\r\n            return alert('Proszę wprowadzić prawidłowe dane')\r\n        }\r\n    }\r\n\r\n    assignCard({cardNumber, cardTypes} = this) {\r\n        let type = false;\r\n        cardTypes.map((el) => {\r\n\r\n            if (el.startNum.test(cardNumber.value.substring(0, 2)) && el.numberLength.includes(cardNumber.value.length)) {\r\n                type = true;\r\n                return this.checkNumber(name = el.name)\r\n            }\r\n        })\r\n        if (type === false) \r\n            return alert('Pdany numer nie jest zgodny z bazą dostawców')\r\n    }\r\n\r\n    checkNumber(name) {\r\n        let multiNums = '';\r\n        let normalNums = [];\r\n        let multiSum = 0;\r\n        let normSum = 0;\r\n\r\n        //Division or multiply and do not multiply the number\r\n        this\r\n            .cardNumber\r\n            .value\r\n            .split('')\r\n            .reverse()\r\n            .map(\r\n                (el, index) => (index % 2 !== 0)\r\n                    ? (multiNums += el * 2)\r\n                    : normalNums.push(el)\r\n            )\r\n\r\n        //Sum of multiplied numbers\r\n        multiNums\r\n            .split('')\r\n            .map((el) => multiSum += Number(el));\r\n\r\n        //Sum of not multiplied numbers\r\n        normalNums.map((el) => normSum += Number(el));\r\n\r\n        if ((multiSum + normSum) % 10 === 0) {\r\n            return this.resultContainer.textContent = `Wprowadzony numer karty jest poprawny, wydał ją: ${name}`;\r\n        } else \r\n            return this.resultContainer.textContent = `Wprowadzony numer karty jest niepoprawny!`;\r\n        }\r\n    \r\n    showInfo(e) {\r\n        this.resultContainer.textContent = '';\r\n        e.preventDefault();\r\n        this.validator();\r\n        this.cardNumber.value = '';\r\n    }\r\n\r\n}\r\n\r\nexport {CheckCardNumber}","import {CheckCardNumber} from \"./card\";\r\nimport './styles/main.scss';\r\n\r\nconst form = document.querySelector('form');\r\nconst checkCardNumber = new CheckCardNumber()\r\nform.addEventListener('submit',(e)=>checkCardNumber.showInfo(e) )"]}